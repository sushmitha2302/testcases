useEffect(() => {
    handleSelectionChange([]);
    const { activeDataList } = getDataList(floodDetails);
    const updatedData = includeProspect
      ? (floodDetails as FloodDataType[])
      : (activeDataList as FloodDataType[]);
    if (activeModule === NatHazModuleEnum.FLOOD && filterCondition) {
      if (filterCondition.floodCell) {
        setFilteredList(
          updatedData.filter(
            (item) => item.floodCell === filterCondition.floodCell,
          ),
        );
      } else {
        setFilteredList(
          updatedData.filter(
            (item) =>
              item.floodHazardFrequencyDescription ===
              filterCondition.floodHazard,
          ),
        );
      }
    } else {
      setFilteredList(updatedData);
    }

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [includeProspect, asofDate, filterCondition]);
  return (




wind ACES 

useEffect(() => {
    handleSelectionChange([]);

    const { activeDataList } = getDataList(windDetails);
    const updatedData = includeProspect
      ? (windDetails as WindDataType[])
      : (activeDataList as WindDataType[]);
    if (activeModule === NatHazModuleEnum.WIND && filterCondition) {
      setFilteredList(
        updatedData.filter((item) => {
          const condition = `${item.windRegion} ${item.uwWindTierCodeDescription}`;
          return (
            condition === filterCondition.region ||
            item.cbiId === filterCondition.cbiId
          );
        }),
      );
    } else {
      setFilteredList(updatedData);
    }

    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [includeProspect, asofDate, filterCondition]);
  return (
